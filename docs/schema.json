{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$id": "https://lonelyplanet.github.io/apple-news-format-schema/schema.json",
  "title": "Apple News Format schema",
  "description": "Describes article.json",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "version": {
      "$ref": "#/definitions/specVersion"
    },
    "identifier": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9_-]{1,64}$",
      "description": "An unique, publisher-provided identifier for this article."
    },
    "title": {
      "type": "string",
      "pattern": ".+",
      "description": "The article title or headline. Should be plain text."
    },
    "language": {
      "type": "string",
      "pattern": "^[a-zA-Z-]+(_[a-zA-Z-]+)?$",
      "description": "A code that indicates the language of the article."
    },
    "layout": {
      "type": "object",
      "additionalProperties": false,
      "description": "The article's column system.",
      "properties": {
        "columns": {
          "description": "The number of columns this article was designed for.",
          "$ref": "#/definitions/absIntMin1"
        },
        "width": {
          "description": "The width (in points) this article was designed for.",
          "$ref": "#/definitions/absIntMin1"
        },
        "gutter": {
          "$ref": "#/definitions/absInt",
          "default": 20,
          "description": "The gutter provides spacing between columns."
        },
        "margin": {
          "$ref": "#/definitions/absInt",
          "default": 60,
          "description": "The outer (left and right) margins of the article, in points."
        }
      },
      "required": [
        "columns",
        "width"
      ]
    },
    "components": {
      "$ref": "#/definitions/componentsArray",
      "description": "The content of this article."
    },
    "advertisingSettings": {
      "$comment": "Deprecated - Use AdvertisementAutoPlacement instead",
      "type": "object",
      "additionalProperties": false,
      "description": "These settings affect the frequency and placement of ads that are automatically placed in your article.",
      "properties": {
        "bannerType": {
          "$ref": "#/definitions/bannerType"
        },
        "distanceFromMedia": {
          "$ref": "#/definitions/unitsOfMeasure",
          "default": 0,
          "description": "The minimum required distance between automatically inserted advertisement components and media (video, images, and embeds)."
        },
        "frequency": {
          "type": "integer",
          "multipleOf": 1.0,
          "minimum": 0,
          "maximum": 10,
          "description": "Leaving this property out, or providing a value of 0 means that no advertisement will be inserted."
        },
        "layout": {
          "type": "object",
          "additionalProperties": false,
          "description": "An automatically inserted advertising component uses the surrounding margins to make sure it positions itself nicely in between components.",
          "properties": {
            "margin": {
              "$ref": "#/definitions/margin"
            }
          },
          "required": [
            "margin"
          ]
        }
      }
    },
    "autoplacement": {
      "type": "object",
      "properties": {
        "advertisement": {
          "$ref": "#/definitions/advertisementAutoPlacement"
        }
      }
    },
    "subtitle": {
      "type": "string"
    },
    "metadata": {
      "type": "object",
      "additionalProperties": false,
      "description": "Information about your article.",
      "properties": {
        "authors": {
          "$ref": "#/definitions/uniqueStringsArray",
          "description": "The authors of this article, who may or may not be shown in the Byline component."
        },
        "campaignData": {
          "type": "object",
          "description": "Custom key-value pairs that can be used for ad targeting."
        },
        "canonicalURL": {
          "$ref": "#/definitions/httpURL",
          "description": "The canonical URL of a web version of this article."
        },
        "coverArt": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/coverArt"
          }
        },
        "excerpt": {
          "type": "string"
        },
        "keywords": {
          "allOf": [
            {
              "$ref": "#/definitions/uniqueStringsArray"
            },
            {
              "maxItems": 50
            }
          ]
        },
        "thumbnailURL": {
          "$ref": "#/definitions/imageURL"
        },
        "transparentToolbar": {
          "type": "boolean",
          "default": false
        },
        "videoURL": {
          "$ref": "#/definitions/httpURL"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkedArticle"
          },
          "description": "Links to other articles in Apple News."
        }
      },
      "patternProperties": {
        "^date(Created|Modified|Published)$": {
          "$ref": "#/definitions/iso8601"
        },
        "^generator(Identifier|Name|Version)$": {
          "type": "string"
        }
      }
    },
    "documentStyle": {
      "type": "object",
      "additionalProperties": false,
      "description": "An object containing the background color of the article.",
      "properties": {
        "backgroundColor": {
          "$ref": "#/definitions/color",
          "default": "#FFF"
        }
      },
      "required": [
        "backgroundColor"
      ]
    },
    "textStyles": {
      "type": "object",
      "description": "The Text Style objects available to use inline for text in Text Components.",
      "patternProperties": {
        ".+": {
          "$ref": "#/definitions/textStyle"
        }
      }
    },
    "componentLayouts": {
      "type": "object",
      "description": "Document-level component layout objects that can be referenced by their key within the componentLayouts object.",
      "patternProperties": {
        ".+": {
          "$ref": "#/definitions/componentLayout"
        }
      }
    },
    "componentStyles": {
      "type": "object",
      "description": "The component styles that can be referenced by components within this document.",
      "patternProperties": {
        ".+": {
          "$ref": "#/definitions/componentStyle"
        }
      }
    },
    "componentTextStyles": {
      "type": "object",
      "description": "The component text styles that can be referenced by other components in this document.",
      "patternProperties": {
        ".+": {
          "$ref": "#/definitions/componentTextStyle"
        }
      }
    }
  },
  "required": [
    "version",
    "identifier",
    "title",
    "language",
    "layout",
    "components",
    "componentTextStyles"
  ],
  "definitions": {
    "advertisementAutoPlacement": {
      "description": "The object for defining the automatic placement of advertisements.",
      "$comment": "ANF 1.9",
      "type": "object",
      "properties": {
        "bannerType": {
          "$ref": "#/definitions/bannerType"
        },
        "conditional": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conditionalAutoPlacement"
          }
        },
        "distanceFromMedia": {
          "$ref": "#/definitions/unitsOfMeasure",
          "default": 0,
          "description": "The minimum required distance between automatically inserted advertisement components and media (video, images, and embeds)."
        },
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "frequency": {
          "type": "integer",
          "multipleOf": 1.0,
          "minimum": 0,
          "maximum": 10,
          "description": "Leaving this property out, or providing a value of 0 means that no advertisement will be inserted."
        },
        "layout": {
          "$ref": "#/definitions/autoPlacementLayout"
        }
      }
    },
    "conditionsArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/condition"
      }
    },
    "conditionalAutoPlacement": {
      "description": "The object for defining conditional properties for an automatically placed component, and when the conditional properties are in effect.",
      "$comment": "ANF 1.9",
      "type": "object",
      "properties": {
        "conditions": {
          "$ref": "#/definitions/conditionsArray"
        },
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "layout": {
          "$ref": "#/definitions/autoPlacementLayout"
        }
      }
    },
    "autoPlacementLayout": {
      "description": "The object for defining the margin above and below advertising components.",
      "$comment": "ANF 1.9",
      "type": "object",
      "properties": {
        "margin": {
          "$ref": "#/definitions/margin"
        }
      }
    },
    "specVersion": {
      "type": "string",
      "pattern": "^[0-9]+\\.[0-9]+$",
      "description": "The version of Apple News Format used in the JSON document."
    },
    "abstractScene": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "fadingStickyHeaderScene": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractScene"
        },
        {
          "properties": {
            "type": {
              "const": "fading_sticky_header"
            },
            "fadeColor": {
              "$ref": "#/definitions/color"
            }
          }
        }
      ]
    },
    "parallaxScaleHeaderScene": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractScene"
        },
        {
          "properties": {
            "type": {
              "const": "parallax_scale"
            }
          }
        }
      ]
    },
    "anyScene": {
      "anyOf": [
        {
          "$ref": "#/definitions/fadingStickyHeaderScene"
        },
        {
          "$ref": "#/definitions/parallaxScaleHeaderScene"
        }
      ]
    },
    "componentsArray": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/anyComponent"
      }
    },
    "bannerType": {
      "type": "string",
      "enum": [
        "any",
        "standard",
        "double_height",
        "large"
      ],
      "default": "any",
      "description": "The type of ad."
    },
    "margin": {
      "oneOf": [
        {
          "$ref": "#/definitions/absInt"
        },
        {
          "type": "object",
          "patternProperties": {
            "^(top|bottom)$": {
              "$ref": "#/definitions/unitsOfMeasure"
            }
          }
        }
      ]
    },
    "padding": {
      "oneOf": [
        {
          "$ref": "#/definitions/absInt"
        },
        {
          "type": "object",
          "patternProperties": {
            "^(top|right|bottom|left)$": {
              "$ref": "#/definitions/unitsOfMeasure"
            }
          }
        }
      ]
    },
    "fillMode": {
      "type": "string",
      "enum": [
        "fit",
        "cover"
      ],
      "default": "cover"
    },
    "horizontalAlignment": {
      "type": "string",
      "enum": [
        "left",
        "center",
        "right"
      ],
      "default": "center"
    },
    "verticalAlignment": {
      "type": "string",
      "enum": [
        "top",
        "center",
        "bottom"
      ],
      "default": "center"
    },
    "httpURL": {
      "type": "string",
      "pattern": "^https?://.+",
      "format": "uri"
    },
    "bundleURL": {
      "type": "string",
      "pattern": "^bundle://.+",
      "format": "uri"
    },
    "URL": {
      "type": "string",
      "pattern": "^(bundle|https?)://.+",
      "format": "uri"
    },
    "appleNewsURL": {
      "type": "string",
      "pattern": "^https://apple\\.news/.+",
      "format": "uri"
    },
    "imageURL": {
      "allOf": [
        {
          "$ref": "#/definitions/URL"
        },
        {
          "pattern": "\\.(jpe?g|gif|png)$"
        }
      ]
    },
    "cloudKitID": {
      "$comment": "TODO: add pattern validation",
      "type": "string"
    },
    "colorStop": {
      "typpe": "object",
      "additionalProperties": false,
      "properties": {
        "color": {
          "$ref": "#/definitions/color"
        },
        "location": {
          "$ref": "#/definitions/percentage"
        }
      },
      "required": [
        "color"
      ]
    },
    "linearGradient": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "const": "linear_gradient"
        },
        "colorStops": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/colorStop"
          }
        },
        "angle": {
          "$ref": "#/definitions/degree"
        }
      },
      "required": [
        "type",
        "colorStops"
      ]
    },
    "videoFill": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "const": "video"
        },
        "URL": {
          "$ref": "#/definitions/httpURL"
        },
        "stillURL": {
          "$ref": "#/definitions/imageURL"
        },
        "fillMode": {
          "$ref": "#/definitions/fillMode"
        },
        "horizontalAlignment": {
          "$ref": "#/definitions/horizontalAlignment"
        },
        "verticalAlignment": {
          "$ref": "#/definitions/verticalAlignment"
        },
        "loop": {
          "type": "boolean",
          "default": true
        }
      },
      "required": [
        "type",
        "URL",
        "stillURL"
      ]
    },
    "imageFill": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "const": "image"
        },
        "URL": {
          "$ref": "#/definitions/imageURL"
        },
        "attachment": {
          "type": "string",
          "enum": [
            "scroll",
            "fixed"
          ]
        },
        "fillMode": {
          "$ref": "#/definitions/fillMode"
        },
        "horizontalAlignment": {
          "$ref": "#/definitions/horizontalAlignment"
        },
        "verticalAlignment": {
          "$ref": "#/definitions/verticalAlignment"
        }
      },
      "required": [
        "type",
        "URL"
      ]
    },
    "uniqueStringsArray": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string"
      }
    },
    "componentTextStyle": {
      "allOf": [
        {
          "$ref": "#/definitions/textStyle"
        },
        {
          "properties": {
            "dropCapStyle": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "numberOfLines": {
                  "type": "integer",
                  "multipleOf": 1.0,
                  "minimum": 2,
                  "maximum": 10
                },
                "backgroundColor": {
                  "$ref": "#/definitions/color"
                },
                "fontName": {
                  "type": "string"
                },
                "numberOfCharacters": {
                  "type": "integer",
                  "multipleOf": 1.0,
                  "minimum": 1,
                  "maximum": 4
                },
                "numberOfRaisedLines": {
                  "$ref": "#/definitions/absInt"
                },
                "padding": {
                  "$ref": "#/definitions/absInt"
                },
                "textColor": {
                  "$ref": "#/definitions/color"
                }
              },
              "required": [
                "numberOfLines"
              ]
            },
            "firstLineIndent": {
              "$ref": "#/definitions/absInt"
            },
            "hangingPunctuation": {
              "type": "boolean",
              "default": false
            },
            "hyphenation": {
              "type": "boolean"
            },
            "lineHeight": {
              "$ref": "#/definitions/absIntMin1"
            },
            "linkStyle": {
              "$ref": "#/definitions/textStyle"
            },
            "paragraphSpacingBefore": {
              "$ref": "#/definitions/absInt"
            },
            "paragraphSpacingAfter": {
              "$ref": "#/definitions/absInt"
            },
            "textAlignment": {
              "type": "string",
              "enum": [
                "left",
                "right",
                "center",
                "justified",
                "none"
              ]
            },
            "textShadow": {
              "$ref": "#/definitions/textShadow"
            }
          }
        }
      ]
    },
    "strokeStyle": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "color": {
          "$ref": "#/definitions/color"
        },
        "width": {
          "$ref": "#/definitions/unitsOfMeasure"
        },
        "style": {
          "type": "string",
          "enum": [
            "solid",
            "dashed",
            "dotted"
          ],
          "default": "solid"
        }
      }
    },
    "border": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "all": {
          "$ref": "#/definitions/strokeStyle"
        }
      },
      "patternProperties": {
        "^(top|right|bottom|left)$": {
          "type": "boolean",
          "default": true
        }
      }
    },
    "componentStyle": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "backgroundColor": {
          "$ref": "#/definitions/color"
        },
        "fill": {
          "anyOf": [
            {
              "$ref": "#/definitions/imageFill"
            },
            {
              "$ref": "#/definitions/videoFill"
            },
            {
              "$ref": "#/definitions/linearGradient"
            }
          ]
        },
        "opacity": {
          "$ref": "#/definitions/percentage"
        },
        "border": {
          "$ref": "#/definitions/border"
        },
        "tableStyle": {
          "$ref": "#/definitions/tableStyle"
        }
      }
    },
    "baseComponentLayout": {
      "type": "object",
      "properties": {
        "columnSpan": {
          "$ref": "#/definitions/absIntMin1"
        },
        "columnStart": {
          "description": "The first column is 0, not 1",
          "$ref": "#/definitions/absInt"
        },
        "contentInset": {
          "$comment": "Deprecated in ANF 1.9",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "patternProperties": {
                "^(top|right|bottom|left)$": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          ]
        },
        "horizontalContentAlignment": {
          "$ref": "#/definitions/horizontalAlignment"
        },
        "margin": {
          "$ref": "#/definitions/margin"
        },
        "maximumContentWidth": {
          "$ref": "#/definitions/unitsOfMeasure"
        },
        "minimumHeight": {
          "$ref": "#/definitions/unitsOfMeasure"
        },
        "minimumWidth": {
          "description": "A value that defines the minimum width of the layout when used within a Container with HorizontalStackDisplay as the specified contentDisplay type.",
          "$ref": "#/definitions/unitsOfMeasure"
        },
        "maximumWidth": {
          "$ref": "#/definitions/unitsOfMeasure"
        },
        "padding": {
          "$ref": "#/definitions/padding"
        }
      },
      "patternProperties": {
        "^ignoreDocument(Gutter|Margin)$": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "enum": [
                "none",
                "left",
                "right",
                "both"
              ]
            }
          ],
          "default": "none"
        }
      }
    },
    "componentLayout": {
      "allOf": [
        {
          "$ref": "#/definitions/baseComponentLayout"
        },
        {
          "properties": {
            "conditional": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/conditionalComponentLayout"
              }
            }
          }
        }
      ]
    },
    "conditionalComponentLayout": {
      "allOf": [
        {
          "$ref": "#/definitions/baseComponentLayout"
        },
        {
          "properties": {
            "conditions": {
              "$ref": "#/definitions/conditionsArray"
            }
          }
        }
      ]
    },
    "condition": {
      "$comment": "Added in ANF 1.9 - https://developer.apple.com/documentation/apple_news/condition",
      "type": "object",
      "properties": {
        "horizontalSizeClass": {
          "description": "A string describing the width at which the article is displayed.",
          "$ref": "#/definitions/sizeClass"
        },
        "maxColumns": {
          "description": "The maximum number of columns in which the article is displayed.",
          "$ref": "#/definitions/absIntMin1"
        },
        "maxContentSizeCategory": {
          "$ref": "#/definitions/contentSizeCategory",
          "default": "AX-XXXL"
        },
        "maxSpecVersion": {
          "$ref": "#/definitions/specVersion"
        },
        "maxViewportAspectRatio": {
          "type": "number",
          "minimum": 0
        },
        "maxViewportWidth": {
          "type": "integer"
        },
        "minColumns": {
          "$ref": "#/definitions/absInt"
        },
        "minContentSizeCategory": {
          "$ref": "#/definitions/contentSizeCategory",
          "default": "XS"
        },
        "minSpecVersion": {
          "$ref": "#/definitions/specVersion"
        },
        "minViewportAspectRatio": {
          "type": "number",
          "minimum": 0
        },
        "minViewportWidth": {
          "type": "integer"
        },
        "platform": {
          "type": "string",
          "enum": [
            "any",
            "ios",
            "macos"
          ]
        },
        "subscriptionStatus": {
          "type": "string",
          "enum": [
            "bundle",
            "subscribed"
          ]
        },
        "verticalSizeClass": {
          "description": "A string describing the height at which the article is displayed.",
          "$ref": "#/definitions/sizeClass"
        },
        "viewLocation": {
          "description": "The context of the article.",
          "type": "string",
          "enum": [
            "any",
            "article",
            "issue_table_of_contents",
            "issue"
          ]
        }
      }
    },
    "sizeClass": {
      "type": "string",
      "enum": [
        "any",
        "regular",
        "compact"
      ]
    },
    "contentSizeCategory": {
      "description": "A string indicating a dynamic type size at which text in the article is displayed.",
      "type": "string",
      "enum": [
        "XS",
        "S",
        "M",
        "L",
        "XL",
        "XXL",
        "XXXL",
        "AX-M",
        "AX-L",
        "AX-XL",
        "AX-XXL",
        "AX-XXXL"
      ]
    },
    "textShadow": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "color": {
          "$ref": "#/definitions/color"
        },
        "radius": {
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "opacity": {
          "$ref": "#/definitions/percentage"
        },
        "offset": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^[xy]$": {
              "$ref": "#/definitions/shadowOffsetNumber"
            }
          },
          "required": [
            "x",
            "y"
          ]
        }
      },
      "required": [
        "color",
        "radius"
      ]
    },
    "textStyle": {
      "type": "object",
      "properties": {
        "backgroundColor": {
          "$ref": "#/definitions/color",
          "default": "transparent"
        },
        "fontFamily": {
          "type": "string"
        },
        "fontName": {
          "type": "string",
          "description": "Use fontName to refer to an explicit font variant's postscript name."
        },
        "fontSize": {
          "$ref": "#/definitions/absIntMin1"
        },
        "fontStyle": {
          "type": "string",
          "enum": [
            "normal",
            "italic",
            "oblique"
          ]
        },
        "fontWeight": {
          "oneOf": [
            {
              "type": "integer",
              "multipleOf": 100.0,
              "minimum": 100,
              "maximum": 900
            },
            {
              "type": "string",
              "enum": [
                "thin",
                "extra-light",
                "extralight",
                "ultra-light",
                "light",
                "regular",
                "normal",
                "book",
                "roman",
                "medium",
                "semi-bold",
                "semibold",
                "demi-bold",
                "demibold",
                "bold",
                "extra-bold",
                "extrabold",
                "ultra-bold",
                "ultrabold",
                "black",
                "heavy",
                "lighter",
                "bolder"
              ]
            }
          ]
        },
        "fontWidth": {
          "type": "string",
          "enum": [
            "ultra-condensed",
            "extra-condensed",
            "condensed",
            "semi-condensed",
            "normal",
            "semi-expanded",
            "expanded",
            "extra-expanded",
            "ultra-expanded"
          ],
          "description": "Defines the width characteristics of a font variant between normal, condensed and expanded."
        },
        "orderedListItems": {
          "$ref": "#/definitions/listItemStyle"
        },
        "unorderedListItems": {
          "$ref": "#/definitions/listItemStyle"
        },
        "strikethrough": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "#/definitions/textDecoration"
            }
          ]
        },
        "stroke": {
          "allOf": [
            {
              "$ref": "#/definitions/textDecoration"
            },
            {
              "required": [
                "color"
              ]
            }
          ]
        },
        "textColor": {
          "$ref": "#/definitions/color"
        },
        "textShadow": {
          "$ref": "#/definitions/textShadow"
        },
        "tracking": {
          "$ref": "#/definitions/percentage"
        },
        "underline": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "#/definitions/textDecoration"
            }
          ]
        },
        "verticalAlignment": {
          "type": "string",
          "enum": [
            "superscript",
            "subscript",
            "baseline"
          ]
        }
      }
    },
    "inlineTextStyle": {
      "type": "object",
      "properties": {
        "rangeLength": {
          "$ref": "#/definitions/absInt"
        },
        "rangeStart": {
          "$ref": "#/definitions/absInt"
        },
        "textStyle": {
          "oneOf": [
            {
              "type": "string",
              "pattern": ".+"
            },
            {
              "$ref": "#/definitions/textStyle"
            }
          ]
        }
      },
      "required": [
        "rangeLength",
        "rangeStart",
        "textStyle"
      ]
    },
    "degree": {
      "type": "number",
      "minimum": -360,
      "maximum": 360
    },
    "percentage": {
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "shadowOffsetNumber": {
      "type": "number",
      "minimum": -50,
      "maximum": 50
    },
    "textDecoration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "color": {
          "$ref": "#/definitions/color"
        },
        "width": {
          "$ref": "#/definitions/absIntMin1"
        }
      }
    },
    "listItemStyle": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "bullet",
            "decimal",
            "lower_alphabetical",
            "upper_alphabetical",
            "lower_roman",
            "upper_roman",
            "character",
            "none"
          ]
        },
        "character": {
          "type": "string",
          "maxLength": 1
        }
      },
      "required": [
        "type"
      ]
    },
    "hexColor": {
      "type": "string",
      "pattern": "^#([a-fA-F0-9]{3,4}|[a-fA-F0-9]{6}|[a-fA-F0-9]{8})$"
    },
    "colorName": {
      "type": "string",
      "enum": [
        "aliceblue",
        "antiquewhite",
        "aqua",
        "aquamarine",
        "azure",
        "beige",
        "bisque",
        "black",
        "blanchedalmond",
        "blue",
        "blueviolet",
        "brown",
        "burlywood",
        "cadetblue",
        "chartreuse",
        "chocolate",
        "coral",
        "cornflowerblue",
        "cornsilk",
        "crimson",
        "cyan",
        "darkblue",
        "darkcyan",
        "darkgoldenrod",
        "darkgray",
        "darkgreen",
        "darkgrey",
        "darkkhaki",
        "darkmagenta",
        "darkolivegreen",
        "darkorange",
        "darkorchid",
        "darkred",
        "darksalmon",
        "darkseagreen",
        "darkslateblue",
        "darkslategray",
        "darkslategrey",
        "darkturquoise",
        "darkviolet",
        "deeppink",
        "deepskyblue",
        "dimgray",
        "dimgrey",
        "dodgerblue",
        "firebrick",
        "floralwhite",
        "forestgreen",
        "fuchsia",
        "gainsboro",
        "ghostwhite",
        "gold",
        "goldenrod",
        "gray",
        "green",
        "greenyellow",
        "grey",
        "honeydew",
        "hotpink",
        "indianred",
        "indigo",
        "ivory",
        "khaki",
        "lavender",
        "lavenderblush",
        "lawngreen",
        "lemonchiffon",
        "lightblue",
        "lightcoral",
        "lightcyan",
        "lightgoldenrodyellow",
        "lightgray",
        "lightgreen",
        "lightgrey",
        "lightpink",
        "lightsalmon",
        "lightseagreen",
        "lightskyblue",
        "lightslategray",
        "lightslategrey",
        "lightsteelblue",
        "lightyellow",
        "lime",
        "limegreen",
        "linen",
        "magenta",
        "maroon",
        "mediumaquamarine",
        "mediumblue",
        "mediumorchid",
        "mediumpurple",
        "mediumseagreen",
        "mediumslateblue",
        "mediumspringgreen",
        "mediumturquoise",
        "mediumvioletred",
        "midnightblue",
        "mintcream",
        "mistyrose",
        "moccasin",
        "navajowhite",
        "navy",
        "oldlace",
        "olive",
        "olivedrab",
        "orange",
        "orangered",
        "orchid",
        "palegoldenrod",
        "palegreen",
        "paleturquoise",
        "palevioletred",
        "papayawhip",
        "peachpuff",
        "peru",
        "pink",
        "plum",
        "powderblue",
        "purple",
        "rebeccapurple",
        "red",
        "rosybrown",
        "royalblue",
        "saddlebrown",
        "salmon",
        "sandybrown",
        "seagreen",
        "seashell",
        "sienna",
        "silver",
        "skyblue",
        "slateblue",
        "slategray",
        "slategrey",
        "snow",
        "springgreen",
        "steelblue",
        "tan",
        "teal",
        "thistle",
        "tomato",
        "transparent",
        "turquoise",
        "violet",
        "wheat",
        "white",
        "whitesmoke",
        "yellow",
        "yellowgreen"
      ]
    },
    "color": {
      "oneOf": [
        {
          "$ref": "#/definitions/hexColor"
        },
        {
          "$ref": "#/definitions/colorName"
        }
      ]
    },
    "iso8601": {
      "type": "string",
      "pattern": "^(19|[2-9][0-9])[0-9]{2}-(0[1-9]|1[0-2])-(0[1-9]|([12][0-9]|3[01]))T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9][+-]([01][0-9]|2[0-3]):[0-5][0-9]$",
      "format": "date-time"
    },
    "absInt": {
      "type": "integer",
      "multipleOf": 1.0,
      "minimum": 0
    },
    "absIntMin1": {
      "type": "integer",
      "multipleOf": 1.0,
      "minimum": 1
    },
    "unitsOfMeasure": {
      "oneOf": [
        {
          "$ref": "#/definitions/absInt"
        },
        {
          "type": "string",
          "pattern": "^[0-9\\.]+(vw|vmin|vmax|vh|dg|dm|cw|gut|pt)?$",
          "$comment": "Regex copied from https://developer.apple.com/documentation/apple_news/supportedunits"
        }
      ]
    },
    "anchor": {
      "type": "object",
      "properties": {
        "targetAnchorPosition": {
          "$ref": "#/definitions/verticalAlignment"
        },
        "originAnchorPosition": {
          "$ref": "#/definitions/verticalAlignment"
        },
        "rangeLength": {
          "$ref": "#/definitions/absInt"
        },
        "rangeStart": {
          "$ref": "#/definitions/absInt"
        },
        "targetComponentIdentifier": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      },
      "required": [
        "targetAnchorPosition"
      ]
    },
    "abstractAnimation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "userControllable": {
          "type": "boolean"
        }
      },
      "required": [
        "type"
      ]
    },
    "appearAnimation": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractAnimation"
        },
        {
          "properties": {
            "type": {
              "const": "appear"
            }
          }
        }
      ]
    },
    "fadeInAnimation": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractAnimation"
        },
        {
          "properties": {
            "type": {
              "const": "fade_in"
            },
            "initialAlpha": {
              "$ref": "#/definitions/percentage"
            }
          }
        }
      ]
    },
    "moveInAnimation": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractAnimation"
        },
        {
          "properties": {
            "type": {
              "const": "move_in"
            },
            "preferredStartingPosition": {
              "type": "string",
              "enum": [
                "left",
                "right"
              ]
            }
          }
        }
      ]
    },
    "scaleFadeAnimation": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractAnimation"
        },
        {
          "properties": {
            "type": {
              "const": "scale_fade"
            },
            "initialAlpha": {
              "$ref": "#/definitions/percentage"
            },
            "initialScale": {
              "$ref": "#/definitions/percentage"
            }
          }
        }
      ]
    },
    "anyAnimation": {
      "anyOf": [
        {
          "$ref": "#/definitions/appearAnimation"
        },
        {
          "$ref": "#/definitions/fadeInAnimation"
        },
        {
          "$ref": "#/definitions/moveInAnimation"
        },
        {
          "$ref": "#/definitions/scaleFadeAnimation"
        }
      ]
    },
    "anyComponent": {
      "anyOf": [
        {
          "$ref": "#/definitions/artileTitleComponent"
        },
        {
          "$ref": "#/definitions/articleThumbnailComponent"
        },
        {
          "$ref": "#/definitions/textualComponent"
        },
        {
          "$ref": "#/definitions/audioComponent"
        },
        {
          "$ref": "#/definitions/containerComponent"
        },
        {
          "$ref": "#/definitions/sectionComponent"
        },
        {
          "$ref": "#/definitions/chapterComponent"
        },
        {
          "$ref": "#/definitions/asideComponent"
        },
        {
          "$ref": "#/definitions/headerComponent"
        },
        {
          "$ref": "#/definitions/articleLinkComponent"
        },
        {
          "$ref": "#/definitions/dividerComponent"
        },
        {
          "$ref": "#/definitions/flexibleSpacerComponent"
        },
        {
          "$ref": "#/definitions/embedWebVideoComponent"
        },
        {
          "$ref": "#/definitions/videoComponent"
        },
        {
          "$ref": "#/definitions/facebookPostComponent"
        },
        {
          "$ref": "#/definitions/instagramComponent"
        },
        {
          "$ref": "#/definitions/tweetComponent"
        },
        {
          "$ref": "#/definitions/imageComponent"
        },
        {
          "$ref": "#/definitions/photoComponent"
        },
        {
          "$ref": "#/definitions/galleryComponent"
        },
        {
          "$ref": "#/definitions/mapComponent"
        },
        {
          "$ref": "#/definitions/htmlTableComponent"
        },
        {
          "$ref": "#/definitions/dataTableComponent"
        },
        {
          "$ref": "#/definitions/arKitComponent"
        },
        {
          "$ref": "#/definitions/bannerAdvertisementComponent"
        },
        {
          "$ref": "#/definitions/mediumRectangleAdvertisementComponent"
        }
      ]
    },
    "abstractComponent": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        },
        "anchor": {
          "$ref": "#/definitions/anchor"
        },
        "animation": {
          "$ref": "#/definitions/anyAnimation"
        },
        "behavior": {
          "$ref": "behavior.json#/definitions/anyBehavior"
        },
        "conditional": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/conditionalComponent"
          }
        },
        "hidden": {
          "type": "boolean",
          "default": false
        },
        "identifier": {
          "type": "string"
        },
        "layout": {
          "oneOf": [
            {
              "type": "string",
              "pattern": ".+"
            },
            {
              "$ref": "#/definitions/componentLayout"
            }
          ]
        },
        "style": {
          "oneOf": [
            {
              "type": "string",
              "pattern": ".+"
            },
            {
              "$ref": "#/definitions/componentStyle"
            }
          ]
        }
      },
      "required": [
        "role"
      ]
    },
    "abstractTextComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "$ref": "#/definitions/baseCaptionDescriptor"
        }
      ]
    },
    "conditionalComponent": {
      "description": "The object for defining conditional properties for a component, and when the conditional properties are in effect.",
      "$comment": "Added in ANF 1.9",
      "type": "object",
      "properties": {
        "conditions": {
          "$ref": "#/definitions/conditionsArray"
        },
        "anchor": {
          "$ref": "#/definitions/anchor"
        },
        "animation": {
          "$ref": "#/definitions/anyAnimation"
        },
        "behavior": {
          "$ref": "behavior.json#/definitions/anyBehavior"
        },
        "hidden": {
          "type": "boolean",
          "default": false
        },
        "identifier": {
          "type": "string"
        },
        "layout": {
          "oneOf": [
            {
              "type": "string",
              "pattern": ".+"
            },
            {
              "$ref": "#/definitions/componentLayout"
            }
          ]
        },
        "style": {
          "oneOf": [
            {
              "type": "string",
              "pattern": ".+"
            },
            {
              "$ref": "#/definitions/componentStyle"
            }
          ]
        }
      }
    },
    "textualComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractTextComponent"
        },
        {
          "properties": {
            "role": {
              "enum": [
                "author",
                "body",
                "byline",
                "caption",
                "heading",
                "heading1",
                "heading2",
                "heading3",
                "heading4",
                "heading5",
                "heading6",
                "illustrator",
                "intro",
                "photographer",
                "pullquote",
                "quote",
                "title"
              ]
            }
          },
          "required": [
            "text"
          ]
        }
      ]
    },
    "artileTitleComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractTextComponent"
        },
        {
          "properties": {
            "role": {
              "const": "article_title"
            }
          }
        }
      ]
    },
    "bannerAdvertisementComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "properties": {
            "role": {
              "const": "banner_advertisement"
            },
            "bannerType": {
              "$ref": "#/definitions/bannerType"
            }
          }
        }
      ]
    },
    "mediumRectangleAdvertisementComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "properties": {
            "role": {
              "const": "medium_rectangle_advertisement"
            }
          }
        }
      ]
    },
    "abstractContainerComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "properties": {
            "additions": {
              "description": "Adding a link to a container component makes the entire component interactable. Any links used in its child components are not interactable.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/componentLink"
              }
            },
            "components": {
              "$ref": "#/definitions/componentsArray"
            },
            "contentDisplay": {
              "oneOf": [
                {
                  "$ref": "#/definitions/horizontalStackDisplay"
                },
                {
                  "$ref": "#/definitions/collectionDisplay"
                }
              ]
            }
          }
        }
      ]
    },
    "containerComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractContainerComponent"
        },
        {
          "properties": {
            "role": {
              "const": "container"
            }
          }
        }
      ]
    },
    "sectionComponent": {
      "description": "The component for organizing an article into sections.",
      "allOf": [
        {
          "$ref": "#/definitions/abstractContainerComponent"
        },
        {
          "properties": {
            "role": {
              "const": "section"
            },
            "scene": {
              "$ref": "#/definitions/anyScene"
            }
          }
        }
      ]
    },
    "chapterComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractContainerComponent"
        },
        {
          "properties": {
            "role": {
              "const": "chapter"
            },
            "scene": {
              "$ref": "#/definitions/anyScene"
            }
          }
        }
      ]
    },
    "asideComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractContainerComponent"
        },
        {
          "properties": {
            "role": {
              "const": "aside"
            }
          }
        }
      ]
    },
    "headerComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractContainerComponent"
        },
        {
          "properties": {
            "role": {
              "const": "header"
            }
          }
        }
      ]
    },
    "articleLinkComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractContainerComponent"
        },
        {
          "properties": {
            "role": {
              "const": "article_link"
            },
            "articleIdentifier": {
              "anyOf": [
                {
                  "$ref": "#/definitions/appleNewsURL"
                },
                {
                  "$ref": "#/definitions/cloudKitID"
                }
              ]
            }
          },
          "required": [
            "articleIdentifier"
          ]
        }
      ]
    },
    "articleThumbnailComponent": {
      "description": "The component for displaying a thumbnail image with an article link.",
      "$comment": "ANF 1.9",
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "$ref": "#/definitions/hasCaptions"
        },
        {
          "properties": {
            "role": {
              "const": "article_thumbnail"
            },
            "additions": {
              "description": "Ignored for all children of ArticleLink.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/componentLink"
              }
            },
            "aspectRatio": {
              "type": "number",
              "default": 1.0
            },
            "explicitContent": {
              "$ref": "#/definitions/explicitContent"
            },
            "fillMode": {
              "$ref": "#/definitions/fillMode"
            },
            "horizontalAlignment": {
              "$ref": "#/definitions/horizontalAlignment"
            },
            "URL": {
              "description": "If omitted, the thumbnail of the article referenced in the ArticleLink component is used.",
              "$ref": "#/definitions/URL"
            },
            "verticalAlignment": {
              "$ref": "#/definitions/verticalAlignment"
            }
          }
        }
      ]
    },
    "dividerComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "properties": {
            "role": {
              "const": "divider"
            },
            "stroke": {
              "$ref": "#/definitions/strokeStyle"
            }
          }
        }
      ]
    },
    "flexibleSpacerComponent": {
      "description": "The object is ignored when used outside of the HorizontalStackDisplay context.",
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "properties": {
            "role": {
              "const": "spacer"
            }
          }
        }
      ]
    },
    "abstractVideoComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "properties": {
            "URL": {
              "$ref": "#/definitions/httpURL"
            },
            "accessibilityCaption": {
              "type": "string"
            },
            "aspectRatio": {
              "type": "number",
              "default": 1.777
            },
            "caption": {
              "type": "string"
            },
            "explicitContent": {
              "$ref": "#/definitions/explicitContent"
            }
          },
          "required": [
            "URL"
          ]
        }
      ]
    },
    "videoComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractVideoComponent"
        },
        {
          "properties": {
            "role": {
              "const": "video"
            },
            "stillURL": {
              "$ref": "#/definitions/imageURL"
            }
          }
        }
      ]
    },
    "embedWebVideoComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractVideoComponent"
        },
        {
          "properties": {
            "role": {
              "enum": [
                "embedwebvideo",
                "embedvideo"
              ]
            },
            "URL": {
              "pattern": "^https://(player\\.vimeo\\.com|www\\.youtube\\.com)/.+"
            }
          }
        }
      ]
    },
    "facebookPostComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "properties": {
            "role": {
              "const": "facebook_post"
            },
            "URL": {
              "allOf": [
                {
                  "$ref": "#/definitions/httpURL"
                },
                {
                  "pattern": "^https://www.facebook.com/.+"
                }
              ]
            }
          },
          "required": [
            "URL"
          ]
        }
      ]
    },
    "instagramComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "properties": {
            "role": {
              "const": "instagram"
            },
            "URL": {
              "allOf": [
                {
                  "$ref": "#/definitions/httpURL"
                },
                {
                  "pattern": "instagram\\.com/.+"
                }
              ]
            }
          },
          "required": [
            "URL"
          ]
        }
      ]
    },
    "tweetComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "properties": {
            "role": {
              "const": "tweet"
            },
            "URL": {
              "allOf": [
                {
                  "$ref": "#/definitions/httpURL"
                },
                {
                  "pattern": "twitter\\.com/.+"
                }
              ]
            }
          },
          "required": [
            "URL"
          ]
        }
      ]
    },
    "abstractMapComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "$ref": "#/definitions/hasCaptions"
        },
        {
          "properties": {
            "latitude": {
              "$ref": "#/definitions/latitude"
            },
            "longitude": {
              "$ref": "#/definitions/longitude"
            },
            "mapType": {
              "type": "string",
              "enum": [
                "standard",
                "hybrid",
                "satellite"
              ],
              "default": "standard"
            },
            "span": {
              "type": "object",
              "properties": {
                "latitudeDelta": {
                  "type": "number",
                  "minimum": 0.0,
                  "maximum": 90.0
                },
                "longitudeDelta": {
                  "type": "number",
                  "minimum": 0.0,
                  "maximum": 180.0
                }
              },
              "required": [
                "latitudeDelta",
                "longitudeDelta"
              ]
            }
          }
        }
      ]
    },
    "mapComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractMapComponent"
        },
        {
          "properties": {
            "role": {
              "const": "map"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/mapItem"
              }
            }
          }
        }
      ]
    },
    "placeComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractMapComponent"
        },
        {
          "properties": {
            "role": {
              "const": "place"
            }
          },
          "required": [
            "latitude",
            "longitude"
          ]
        }
      ]
    },
    "latitude": {
      "type": "number",
      "minimum": -90.0,
      "maximum": 90.0
    },
    "longitude": {
      "type": "number",
      "minimum": -180.0,
      "maximum": 180.0
    },
    "mapItem": {
      "type": "object",
      "properties": {
        "latitude": {
          "$ref": "#/definitions/latitude"
        },
        "longitude": {
          "$ref": "#/definitions/longitude"
        },
        "caption": {
          "type": "string"
        }
      },
      "required": [
        "latitude",
        "longitude"
      ]
    },
    "htmlTableComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "properties": {
            "role": {
              "const": "htmltable"
            },
            "html": {
              "type": "string"
            }
          },
          "required": [
            "html"
          ]
        }
      ]
    },
    "recordStore": {
      "type": "object",
      "properties": {
        "descriptors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dataDescriptor"
          }
        },
        "records": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "required": [
        "descriptors",
        "records"
      ]
    },
    "dataTableSorting": {
      "type": "object",
      "properties": {
        "descriptor": {
          "type": "string"
        },
        "direction": {
          "type": "string",
          "enum": [
            "ascending",
            "descending"
          ]
        }
      },
      "required": [
        "descriptor",
        "direction"
      ]
    },
    "dataTableComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "properties": {
            "role": {
              "const": "datatable"
            },
            "data": {
              "$ref": "#/definitions/recordStore"
            },
            "dataOrientation": {
              "type": "string",
              "enum": [
                "horizontal",
                "vertical"
              ],
              "default": "horizontal"
            },
            "showDescriptorLabels": {
              "type": "boolean",
              "default": true
            },
            "sortBy": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dataTableSorting"
              }
            }
          },
          "required": [
            "data"
          ]
        }
      ]
    },
    "abstractImageComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "$ref": "#/definitions/hasCaptions"
        },
        {
          "properties": {
            "role": {
              "enum": [
                "figure",
                "image",
                "logo",
                "photo",
                "portrait"
              ]
            },
            "URL": {
              "$ref": "#/definitions/imageURL"
            }
          },
          "required": [
            "URL"
          ]
        }
      ]
    },
    "imageComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractImageComponent"
        },
        {
          "properties": {
            "role": {
              "enum": [
                "figure",
                "image",
                "logo"
              ]
            },
            "caption": {
              "type": "string"
            }
          }
        }
      ]
    },
    "photoComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractImageComponent"
        },
        {
          "properties": {
            "role": {
              "enum": [
                "photo",
                "portrait"
              ]
            }
          }
        }
      ]
    },
    "galleryComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "properties": {
            "role": {
              "enum": [
                "gallery",
                "mosaic"
              ]
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/galleryItem"
              }
            }
          }
        }
      ]
    },
    "galleryItem": {
      "allOf": [
        {
          "$ref": "#/definitions/hasCaptions"
        },
        {
          "type": "object",
          "properties": {
            "URL": {
              "$ref": "#/definitions/imageURL"
            },
            "explicitContent": {
              "$ref": "#/definitions/explicitContent"
            }
          },
          "required": [
            "URL"
          ]
        }
      ]
    },
    "baseCaptionDescriptor": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "pattern": ".+"
        },
        "additions": {
          "$ref": "#/definitions/additions"
        },
        "format": {
          "$ref": "#/definitions/format"
        },
        "inlineTextStyles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inlineTextStyle"
          }
        },
        "textStyle": {
          "oneOf": [
            {
              "type": "string",
              "pattern": ".+"
            },
            {
              "$ref": "#/definitions/componentTextStyle"
            }
          ]
        }
      }
    },
    "captionDescriptor": {
      "allOf": [
        {
          "$ref": "#/definitions/baseCaptionDescriptor"
        },
        {
          "required": [
            "text"
          ]
        }
      ]
    },
    "arKitComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "type": "object",
          "properties": {
            "role": {
              "const": "arkit"
            },
            "URL": {
              "allOf": [
                {
                  "$ref": "#/definitions/URL"
                },
                {
                  "pattern": "\\.usdz$"
                }
              ]
            },
            "accessibilityCaption": {
              "type": "string"
            },
            "caption": {
              "type": "string"
            },
            "explicitContent": {
              "$ref": "#/definitions/explicitContent"
            }
          },
          "required": [
            "URL",
            "caption"
          ]
        }
      ]
    },
    "audioComponent": {
      "allOf": [
        {
          "$ref": "#/definitions/abstractComponent"
        },
        {
          "$ref": "#/definitions/hasCaptions"
        },
        {
          "properties": {
            "role": {
              "enum": [
                "audio",
                "music"
              ]
            },
            "URL": {
              "$ref": "#/definitions/httpURL"
            },
            "explicitContent": {
              "$ref": "#/definitions/explicitContent"
            },
            "imageURL": {
              "$ref": "#/definitions/imageURL"
            }
          },
          "required": [
            "URL"
          ]
        }
      ]
    },
    "hasCaptions": {
      "type": "object",
      "properties": {
        "accessibilityCaption": {
          "type": "string"
        },
        "caption": {
          "$ref": "#/definitions/caption"
        }
      }
    },
    "caption": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/captionDescriptor"
        }
      ]
    },
    "explicitContent": {
      "type": "boolean",
      "default": false
    },
    "format": {
      "type": "string",
      "enum": [
        "html",
        "markdown",
        "none"
      ],
      "default": "none"
    },
    "additions": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/componentLink"
          },
          {
            "$ref": "#/definitions/linkAddition"
          }
        ]
      }
    },
    "componentLink": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "link"
        },
        "URL": {
          "$ref": "#/definitions/URL"
        }
      },
      "required": [
        "type",
        "URL"
      ]
    },
    "linkAddition": {
      "allOf": [
        {
          "$ref": "#/definitions/componentLink"
        },
        {
          "properties": {
            "rangeLength": {
              "$ref": "#/definitions/absInt"
            },
            "rangeStart": {
              "$ref": "#/definitions/absInt"
            }
          },
          "required": [
            "rangeLength",
            "rangeStart"
          ]
        }
      ]
    },
    "coverArt": {
      "$comment": "Deprecated",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "const": "image"
        },
        "URL": {
          "$ref": "#/definitions/imageURL"
        },
        "accessibilityCaption": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "URL"
      ]
    },
    "horizontalStackDisplay": {
      "description": "The object for displaying components side by side in a Container component.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "horizontal_stack"
        }
      },
      "required": [
        "type"
      ]
    },
    "collectionDisplay": {
      "description": "Defines how the collection of child components is presented.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "collection"
        },
        "alignment": {
          "type": "string",
          "enum": [
            "left",
            "center",
            "right"
          ],
          "default": "left"
        },
        "distribution": {
          "type": "string",
          "enum": [
            "narrow",
            "wide"
          ],
          "default": "wide"
        },
        "gutter": {
          "$ref": "#/definitions/unitsOfMeasure",
          "default": 0
        },
        "maximumWidth": {
          "$ref": "#/definitions/unitsOfMeasure",
          "default": "50cw"
        },
        "minimumWidth": {
          "$ref": "#/definitions/unitsOfMeasure"
        },
        "rowSpacing": {
          "$ref": "#/definitions/unitsOfMeasure",
          "default": 0
        },
        "variableSizing": {
          "type": "boolean",
          "default": false
        },
        "widows": {
          "type": "string",
          "enum": [
            "equalize",
            "optimize"
          ],
          "default": "optimize"
        }
      },
      "required": [
        "type"
      ]
    },
    "linkedArticle": {
      "type": "object",
      "properties": {
        "URL": {
          "anyOf": [
            {
              "$ref": "#/definitions/appleNewsURL"
            },
            {
              "$ref": "#/definitions/httpURL"
            }
          ]
        },
        "relationship": {
          "type": "string",
          "enum": [
            "related",
            "promoted"
          ]
        }
      },
      "required": [
        "URL",
        "relationship"
      ]
    },
    "baseTableCellStyle": {
      "type": "object",
      "properties": {
        "backgroundColor": {
          "$ref": "#/definitions/color"
        },
        "border": {
          "$ref": "#/definitions/border"
        },
        "width": {
          "$ref": "#/definitions/absInt"
        },
        "minimumWidth": {
          "$ref": "#/definitions/unitsOfMeasure"
        },
        "height": {
          "$ref": "#/definitions/unitsOfMeasure"
        },
        "padding": {
          "$ref": "#/definitions/padding"
        },
        "textStyle": {
          "oneOf": [
            {
              "type": "string",
              "pattern": ".+"
            },
            {
              "$ref": "#/definitions/componentTextStyle"
            }
          ]
        },
        "horizontalAlignment": {
          "$ref": "#/definitions/horizontalAlignment"
        },
        "verticalAlignment": {
          "$ref": "#/definitions/verticalAlignment"
        }
      }
    },
    "tableCellStyle": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/baseTableCellStyle"
        },
        {
          "properties": {
            "conditional": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/conditionalTableCellStyle"
              }
            }
          }
        }
      ]
    },
    "tableCellSelector": {
      "type": "object",
      "properties": {
        "descriptor": {
          "type": "string"
        },
        "columnIndex": {
          "$ref": "#/definitions/absInt"
        },
        "rowIndex": {
          "$ref": "#/definitions/absInt"
        },
        "evenColumns": {
          "type": "boolean"
        },
        "evenRows": {
          "type": "boolean"
        },
        "oddColumns": {
          "type": "boolean"
        },
        "oddRows": {
          "type": "boolean"
        }
      }
    },
    "conditionalTableCellStyle": {
      "allOf": [
        {
          "$ref": "#/definitions/baseTableCellStyle"
        },
        {
          "properties": {
            "selectors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tableCellSelector"
              }
            }
          },
          "required": [
            "selectors"
          ]
        }
      ]
    },
    "tableColumnSelector": {
      "type": "object",
      "properties": {
        "descriptor": {
          "type": "string"
        },
        "columnIndex": {
          "$ref": "#/definitions/absInt"
        },
        "odd": {
          "type": "boolean"
        },
        "even": {
          "type": "boolean"
        }
      }
    },
    "baseTableColumnStyle": {
      "type": "object",
      "properties": {
        "backgroundColor": {
          "$ref": "#/definitions/color"
        },
        "width": {
          "$ref": "#/definitions/absInt"
        },
        "minimumWidth": {
          "$ref": "#/definitions/unitsOfMeasure"
        },
        "divider": {
          "$ref": "#/definitions/strokeStyle"
        }
      }
    },
    "conditionalTableColumnStyle": {
      "allOf": [
        {
          "$ref": "#/definitions/baseTableColumnStyle"
        },
        {
          "type": "object",
          "properties": {
            "selectors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tableColumnSelector"
              }
            }
          },
          "required": [
            "selectors"
          ]
        }
      ]
    },
    "tableColumnStyle": {
      "allOf": [
        {
          "$ref": "#/definitions/baseTableColumnStyle"
        },
        {
          "type": "object",
          "properties": {
            "conditional": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/conditionalTableColumnStyle"
              }
            }
          }
        }
      ]
    },
    "tableRowSelector": {
      "type": "object",
      "properties": {
        "descriptor": {
          "type": "string"
        },
        "rowIndex": {
          "$ref": "#/definitions/absInt"
        },
        "odd": {
          "type": "boolean"
        },
        "even": {
          "type": "boolean"
        }
      }
    },
    "baseTableRowStyle": {
      "type": "object",
      "properties": {
        "backgroundColor": {
          "$ref": "#/definitions/color"
        },
        "height": {
          "$ref": "#/definitions/absInt"
        },
        "divider": {
          "$ref": "#/definitions/strokeStyle"
        }
      }
    },
    "conditionalTableRowStyle": {
      "allOf": [
        {
          "$ref": "#/definitions/baseTableRowStyle"
        },
        {
          "type": "object",
          "properties": {
            "selectors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tableRowSelector"
              }
            }
          },
          "required": [
            "selectors"
          ]
        }
      ]
    },
    "tableRowStyle": {
      "allOf": [
        {
          "$ref": "#/definitions/baseTableRowStyle"
        },
        {
          "type": "object",
          "properties": {
            "conditional": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/conditionalTableRowStyle"
              }
            }
          }
        }
      ]
    },
    "tableStyle": {
      "type": "object",
      "properties": {
        "cells": {
          "$ref": "#/definitions/tableCellStyle"
        },
        "columns": {
          "$ref": "#/definitions/tableColumnStyle"
        },
        "headerCells": {
          "$ref": "#/definitions/tableCellStyle"
        },
        "headerColumns": {
          "$ref": "#/definitions/tableColumnStyle"
        },
        "headerRows": {
          "$ref": "#/definitions/tableRowStyle"
        },
        "rows": {
          "$ref": "#/definitions/tableRowStyle"
        }
      }
    },
    "abstractDataFormat": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "floatDataFormat": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/abstractDataFormat"
        },
        {
          "properties": {
            "type": {
              "const": "float"
            },
            "decimals": {
              "$ref": "#/definitions/absInt"
            }
          }
        }
      ]
    },
    "imageDataFormat": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/abstractDataFormat"
        },
        {
          "properties": {
            "type": {
              "const": "image"
            },
            "maximumHeight": {
              "$ref": "#/definitions/unitsOfMeasure"
            },
            "maximumWidth": {
              "$ref": "#/definitions/unitsOfMeasure"
            },
            "minimumHeight": {
              "$ref": "#/definitions/unitsOfMeasure"
            },
            "minimumWidth": {
              "$ref": "#/definitions/unitsOfMeasure"
            }
          }
        }
      ]
    },
    "anyDataFormat": {
      "anyOf": [
        {
          "$ref": "#/definitions/floatDataFormat"
        },
        {
          "$ref": "#/definitions/imageDataFormat"
        }
      ]
    },
    "dataDescriptor": {
      "type": "object",
      "properties": {
        "dataType": {
          "type": "string",
          "enum": [
            "string",
            "text",
            "image",
            "number",
            "integer",
            "float"
          ]
        },
        "format": {
          "$ref": "#/definitions/anyDataFormat"
        },
        "identifier": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/definitions/formattedText"
            }
          ]
        }
      },
      "required": [
        "dataType",
        "key",
        "label"
      ]
    },
    "formattedText": {
      "type": "object",
      "properties": {
        "additions": {
          "$ref": "#/definitions/additions"
        },
        "format": {
          "type": "string",
          "enum": [
            "html",
            "none"
          ],
          "default": "none"
        },
        "inlineTextStyles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inlineTextStyle"
          }
        },
        "text": {
          "type": "string"
        },
        "textStyle": {
          "oneOf": [
            {
              "type": "string",
              "pattern": ".+"
            },
            {
              "$ref": "#/definitions/componentTextStyle"
            }
          ]
        },
        "type": {
          "const": "formatted_text"
        }
      },
      "required": [
        "text",
        "type"
      ]
    }
  }
}
